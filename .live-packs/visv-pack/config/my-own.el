(defun surround-with (s)
  (interactive "sString to surround with: ")
  (let (start end)
    (if (region-active-p)
        (setq start (region-beginning)
              end (region-end))
      (let ((bounds (bounds-of-thing-at-point 'symbol)))
        (setq start (car bounds)
              end (cdr bounds))))
    (goto-char start)
    (insert s)
    (goto-char (+ (length s) end))
    (insert s)))

(defun surround-with-tag (tag)
  (interactive "s<tag> to surround with: ")
  (let (start end)
    (if (region-active-p)
        (setq start (region-beginning)
              end (region-end))
      (let ((bounds (bounds-of-thing-at-point 'symbol)))
        (setq start (car bounds)
              end (cdr bounds))))
    (goto-char start)
    (let ((start-tag (format "<%s>" tag))
          (end-tag (format "</%s>" tag)))
      (insert start-tag)
      (goto-char (+ (length start-tag) end))
      (insert end-tag))))
